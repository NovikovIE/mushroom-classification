[tool.poetry]
name = "mushroom-classification"
version = "0.1.0"
description = "Mushroom image classification"
authors = ["Ivan Novikov <ie.novikov@phystech.edu>"]
maintainers = ["Ivan Novikov <ie.novikov@phystech.edu>"]
readme = "README.md"
repository = "https://github.com/NovikovIE/mushroom-classification"
keywords = ["mushroom", "data science", "machine learning", "computer vision"]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "~3.10"
torch = "^2.1.0"
torchvision = "^0.16.0"
pytorch-lightning = "^2.2.0"
hydra-core = "^1.3.2"
hydra-submitit-launcher = "^1.2.0"
kaggle = "^1.5.16"
dvc = "^3.41.0"
torchmetrics = "^1.3.2"
omegaconf = "^2.3.0"
tqdm = "^4.66.1"
pillow = "^10.1.0"
scikit-learn = "^1.3.2"
pandas = "^2.1.4"
numpy = "^1.26.2"
timm = "^0.9.16"
pre-commit = "^4.1.0"
tensorboard = "^2.19.0"
mlflow = "^2.6.0"
matplotlib = "^3.7.3"
onnxruntime = "^1.16.0"
tensorrt = "^10.11.0.33"
pycuda = "^2025.1"
onnx = "^1.16.0"
tritonclient = {version = "^2.38.0", extras = ["http"]}
wandb = "^0.16.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.1.0"
pytest = "^7.4.4"
ipython = "^8.18.1"
jupyter = "^1.0.0"
mypy = "^1.8.0"
types-Pillow = "^10.1.0"
types-tqdm = "^4.66.0.20231201"
types-PyYAML = "^6.0.12.12"
pytest-cov = "^4.1.0"

[tool.black]
line-length = 90
target-version = ["py310"]

[tool.isort]
src_paths = ["mushroom_classification"]
profile = "black"
line_length = 90
lines_after_imports = 2

[tool.flake8]
max-line-length = 90
ignore = ['E203', 'E501', 'W503', 'B950']
max-complexity = 12
select = ['B', 'C', 'E', 'F', 'W', 'B9']
per-file-ignores = [
    '**/__init__.py: F401',
    'types.py: F401',
]
count = true

[tool.nbqa.config]
black = "pyproject.toml"
isort = "pyproject.toml"
flake8 = "pyproject.toml"

[tool.nbqa.addopts]
flake8 = ["--extend-ignore=E402,E501,W503,B950"]
black = ["--line-length=90"]

[tool.nbqa.mutate]
black = 1
isort = 1

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
